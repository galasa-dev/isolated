name: PR build

on:
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  NAMESPACE: galasa-dev
  IMAGE_TAG: main
  
jobs:
  build-isolated:
    name: Build Isolated using galasabld and maven
    runs-on: ubuntu-latest

    steps:
        - name: Checkout Framework
          uses: actions/checkout@v4
          with:
            repository: ${{env.NAMESPACE}}/framework
            path: framework

        - name: Checkout Extensions
          uses: actions/checkout@v4
          with:
            repository: ${{env.NAMESPACE}}/extensions
            path: extensions
        
        - name: Checkout Managers
          uses: actions/checkout@v4
          with:
            repository: ${{env.NAMESPACE}}/managers
            path: managers

        - name: Checkout OBR
          uses: actions/checkout@v4
          with:
            repository: ${{env.NAMESPACE}}/obr
            path: obr

        - name: Checkout Isolated
          uses: actions/checkout@v4
          with:
            path: isolated
        
        - name: Set up JDK
          uses: actions/setup-java@v4
          with:
            java-version: '11'
            distribution: 'semeru'
            cache: maven
    
        # - name: Print githash
        #   run: |
        #     echo $GITHUB_SHA > ./obr.githash

        # - name: Make secrets directory
        #   run : |
        #       mkdir /home/runner/work/secrets

        # - name: Copy settings.xml
        #   env:
        #       MAVEN_SETTINGS_XML: ${{ secrets.MAVEN_SETTINGS_XML }}
        #   run : |
        #       echo $MAVEN_SETTINGS_XML > /home/runner/work/secrets/settings.xml
        # - name: Copy GPG passphrase
        #   env:
        #       GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        #   run : |
        #       echo $GPG_PASSPHRASE > /home/runner/work/secrets/passphrase.file
        # - name: Copy GPG key
        #   env:
        #       GPG_KEY_BASE64: ${{ secrets.GPG_KEY }}
        #   run : |
        #       echo $GPG_KEY_BASE64 |  base64 --decode > /home/runner/work/secrets/galasa.gpg
              
        # - name: Make GPG home directory and change permissions
        #   run: |
        #       mkdir /home/runner/work/gpg
        #       chmod '700' /home/runner/work/gpg
          
        # - name: Import GPG
        #   run: |
        #       gpg --homedir /home/runner/work/gpg --pinentry-mode loopback --passphrase-file /home/runner/work/secrets/passphrase.file --import /home/runner/work/secrets/galasa.gpg
          
        # - name: Copy custom settings.xml
        #   run: |
        #       cp /home/runner/work/secrets/settings.xml /home/runner/work/gpg/settings.xml
        
        - name:  Generate Isolated pom.xml
          working-directory: ./isolated/full
          run: |
           docker run --rm -v ${{github.workspace}}:/var/root/ ghcr.io/${{env.NAMESPACE}}/galasabld-amd64:${{env.IMAGE_TAG}} template --releaseMetadata var/root/framework/release.yaml --releaseMetadata /var/root/extensions/release.yaml --releaseMetadata /var/root/managers/release.yaml --releaseMetadata /var/root/obr/release.yaml --template /var/root/isolated/full/pom.template --output /var/root/isolated/full/pom.xml --isolated
           
        # - name: Display Galasa BOM pom.xml
        #   run: |
        #    cat ${{github.workspace}}/obr/galasa-bom/pom.xml
        
        - name: Build Isolated pom.xml with maven
          working-directory: ./isolated/full
          env:
            GITHUB_TOKEN_READ_PACKAGES_USERNAME: ${{ secrets.READ_GITHUB_PACKAGES_USERNAME }}
            GITHUB_TOKEN_READ_PACKAGES_PASSWORD: ${{ secrets.READ_GITHUB_PACKAGES_TOKEN }}
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pom.xml process-sources \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           -Dgithub.token.read.packages.username=${{ env.GITHUB_TOKEN_READ_PACKAGES_USERNAME }} \
           -Dgithub.token.read.packages.password=${{ env.GITHUB_TOKEN_READ_PACKAGES_PASSWORD }} \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Build Isolated pom2.xml with maven
          working-directory: ./isolated/full
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pom2.xml process-sources \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Build Isolated pom3.xml with maven
          working-directory: ./isolated/full
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pom3.xml process-sources \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Build Isolated pom4.xml with maven
          working-directory: ./isolated/full
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pom4.xml process-sources \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Build Isolated pom5.xml with maven
          working-directory: ./isolated/full
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pom5.xml process-sources \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Build Isolated pom6.xml with maven
          working-directory: ./isolated/full
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pom6.xml process-sources \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Build Javadoc with maven
          working-directory: ./isolated/full
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pomJavaDoc.xml process-sources \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Build Docs with maven
          working-directory: ./isolated/full
          env:
            GITHUB_TOKEN_READ_PACKAGES_USERNAME: ${{ secrets.READ_GITHUB_PACKAGES_USERNAME }}
            GITHUB_TOKEN_READ_PACKAGES_PASSWORD: ${{ secrets.READ_GITHUB_PACKAGES_TOKEN }}
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pomDocs.xml process-sources \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           -Dgithub.token.read.packages.username=${{ env.GITHUB_TOKEN_READ_PACKAGES_USERNAME }} \
           -Dgithub.token.read.packages.password=${{ env.GITHUB_TOKEN_READ_PACKAGES_PASSWORD }} \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Download galasactl binaries
          working-directory: ./isolated/full
          run: |
            mkdir bin && 
            cd bin && 
            wget https://development.galasa.dev/main/binary/cli/galasactl-darwin-x86_64 &&
            wget https://development.galasa.dev/main/binary/cli/galasactl-darwin-arm64 &&
            wget https://development.galasa.dev/main/binary/cli/galasactl-linux-arm64 &&
            wget https://development.galasa.dev/main/binary/cli/galasactl-linux-x86_64 &&
            wget https://development.galasa.dev/main/binary/cli/galasactl-linux-s390x &&
            wget https://development.galasa.dev/main/binary/cli/galasactl-windows-x86_64.exe &&
            cd ..

        - name: Build galasactl directory with maven
          working-directory: ./isolated/full
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pomGalasactl.xml validate \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Copy text files into Isolated
          working-directory: ./isolated/full
          run : |
            cp -vr resources/* target/isolated/

        - name: Build Docker image for Isolated development maven registry
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ${{github.workspace}}/isolated/dockerfiles/dockerfile.isolated
            load: true
            tags: isolated-maven-artefacts:test
            build-args: |
              directory=isolated/full

        - name: Build Docker image for Isolated tar file
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ${{github.workspace}}/isolated/dockerfiles/dockerfile.isolated
            load: true
            tags: galasa-distribution:test
            build-args: |
              --tarPath
              isolated/full/target/isolated/isolated.tar
              directory=isolated/full

        - name: Build Isolated zip with maven
          working-directory: ./isolated/full
          run: |
           mvn -f ${{github.workspace}}/isolated/full/pomZip.xml deploy \
           -Dgpg.skip=true \
           -Dgalasa.target.repo=file:target/isolated/maven \
           -Dgalasa.release.repo=file:${{github.workspace}}/isolated/full/repo \
           -Dgalasa.runtime.repo=https://development.galasa.dev/gh/maven-repo/obr \
           -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
           -Dgalasa.javadoc.repo=https://development.galasa.dev/gh/maven-repo/javadoc \
           -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev/galasa.dev \
           -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
           --batch-mode --errors --fail-at-end \
           --settings ${{ github.workspace }}/isolated/settings.xml

        - name: Build Docker image for Isolated zip
          uses: docker/build-push-action@v5
          with:
            context: ./isolated/full
            file: ${{github.workspace}}/isolated/dockerfiles/dockerfile.isolatedzip
            load: true
            tags: isolated-zip:test
            build-args: |
              baseVersion=latest
              dockerRepository=ghcr.io

  # build-mvp:
  #   name: Build MVP using galasabld and maven
  #   runs-on: ubuntu-latest

  #   steps:
        