#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
name: PR build

on:
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  NAMESPACE: ${{ github.repository_owner }}
  
jobs:
  find-last-successful-build:
    name: Find last successful Galasa build to download galasa-docs-site from
    runs-on: ubuntu-latest

    outputs: 
      workflow_id: ${{ steps.find-last-successful-build.outputs.workflow_id }}

    steps:
      - name: Find last successful Galasa build
        id: find-last-successful-build
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: https://github.com/galasa-dev/galasa
        run: |
          echo "workflow_id=$(gh run list \
            --repo ${{ env.REPO }} \
            --workflow 'Main Build Orchestrator' \
            --branch main \
            --status success \
            --limit 1 \
            --json databaseId | jq '.[0].databaseId')" >> $GITHUB_OUTPUT

  build-isolated:
    name: Build Isolated
    runs-on: ubuntu-latest
    needs: find-last-successful-build

    steps:
      - name: Checkout Galasa
        uses: actions/checkout@v4
        with:
          repository: ${{ env.NAMESPACE }}/galasa
          path: galasa

      - name: Checkout Isolated
        uses: actions/checkout@v4
        with:
          path: isolated
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'semeru'
      
      - name:  Generate Isolated pom.xml
        run: |
          docker run --rm -v ${{ github.workspace }}:/var/root/ ghcr.io/galasa-dev/galasabld-amd64:main template \
          --releaseMetadata var/root/galasa/modules/framework/release.yaml \
          --releaseMetadata /var/root/galasa/modules/extensions/release.yaml \
          --releaseMetadata /var/root/galasa/modules/managers/release.yaml \
          --releaseMetadata /var/root/galasa/modules/obr/release.yaml \
          --template /var/root/isolated/full/pom.template \
          --output /var/root/isolated/full/pom.xml \
          --isolated
      
      - name: Make directory to place build logs in
        working-directory: ./isolated/full
        run: |
          mkdir isolated-build-logs

      - name: Build Isolated pom.xml with maven
        working-directory: ./isolated/full
        run: |
          set -o pipefail
          mvn -f pom.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee isolated-build-logs/build-isolated-pom.log

      - name: Build Isolated pom2.xml with maven
        working-directory: ./isolated/full
        run: |
          set -o pipefail
          mvn -f pom2.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee isolated-build-logs/build-isolated-pom2.log

      - name: Build Isolated pom3.xml with maven
        working-directory: ./isolated/full
        run: |
          set -o pipefail
          mvn -f pom3.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee isolated-build-logs/build-isolated-pom3.log

      - name: Build Isolated pom4.xml with maven
        working-directory: ./isolated/full
        run: |
          set -o pipefail
          mvn -f pom4.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee isolated-build-logs/build-isolated-pom4.log

      - name: Build Isolated pom5.xml with maven
        working-directory: ./isolated/full
        run: |
          set -o pipefail
          mvn -f pom5.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee isolated-build-logs/build-isolated-pom5.log

      - name: Build Isolated pom6.xml with maven
        working-directory: ./isolated/full
        run: |
          set -o pipefail
          mvn -f pom6.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee isolated-build-logs/build-isolated-pom6.log

      - name: Build Isolated Javadoc with maven
        working-directory: ./isolated/full
        run: |
          set -o pipefail
          mvn -f pomJavaDoc.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee isolated-build-logs/build-isolated-javadoc.log

      - name: Download galasactl binaries
        working-directory: ./isolated/full
        run: |
          mkdir bin && 
          cd bin && 
          wget https://development.galasa.dev/main/binary/cli/galasactl-darwin-x86_64 &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-darwin-arm64 &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-linux-arm64 &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-linux-x86_64 &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-linux-s390x &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-windows-x86_64.exe &&
          cd ..

      - name: Build galasactl directory with maven
        working-directory: ./isolated/full
        run: |
          set -o pipefail
          mvn -f pomGalasactl.xml validate -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee isolated-build-logs/build-isolated-galasactl.log

      - name: Copy text files into Isolated
        working-directory: ./isolated/full
        run : |
          cp -vr resources/* target/isolated/

      - name: Build Docker image for Isolated development maven registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ github.workspace }}/isolated/dockerfiles/dockerfile.isolated
          load: true
          tags: galasa-isolated:test
          build-args: |
            directory=isolated/full

      - name: Download galasa-docs-site HTML from Galasa builds
        uses: actions/download-artifact@v4
        with:
          name: galasa-docs-site
          path: ${{ github.workspace }}/isolated/full/target/isolated/galasa-docs-site
          github-token: ${{ github.token }}
          run-id: ${{ needs.find-last-successful-build.outputs.workflow_id }}

      - name: Build Isolated zip with maven
        working-directory: ./isolated/full
        run: |
          set -o pipefail
          mvn -f pomZip.xml deploy -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.release.repo=file:${{ github.workspace }}/isolated/full/repo \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee isolated-build-logs/build-isolated-zip.log

      - name: Upload Isolated Maven build logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: isolated-maven-build-logs
          path: isolated-build-logs
          retention-days: 7

      - name: Build Docker image for Isolated zip
        uses: docker/build-push-action@v5
        with:
          context: ./isolated/full
          file: ${{ github.workspace }}/isolated/dockerfiles/dockerfile.isolatedzip
          load: true
          tags: galasa-isolated-zip:test
          build-args: |
            baseVersion=latest
            dockerRepository=${{ env.REGISTRY }}

  build-mvp:
    name: Build MVP
    runs-on: ubuntu-latest
    needs: find-last-successful-build

    steps:
      - name: Checkout Galasa
        uses: actions/checkout@v4
        with:
          repository: ${{ env.NAMESPACE }}/galasa
          path: galasa

      - name: Checkout Isolated
        uses: actions/checkout@v4
        with:
          path: isolated
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'semeru'
      
      - name:  Generate MVP pom.xml
        run: |
          docker run --rm -v ${{ github.workspace }}:/var/root/ ghcr.io/galasa-dev/galasabld-amd64:main template \
          --releaseMetadata var/root/galasa/modules/framework/release.yaml \
          --releaseMetadata /var/root/galasa/modules/extensions/release.yaml \
          --releaseMetadata /var/root/galasa/modules/managers/release.yaml \
          --releaseMetadata /var/root/galasa/modules/obr/release.yaml \
          --template /var/root/isolated/mvp/pom.template \
          --output /var/root/isolated/mvp/pom.xml \
          --mvp
      
      - name: Make directory to place build logs in
        working-directory: ./isolated/mvp
        run: |
          mkdir mvp-build-logs

      - name: Build MVP pom.xml with maven
        working-directory: ./isolated/mvp
        run: |
          set -o pipefail
          mvn -f pom.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee mvp-build-logs/build-mvp-pom.log

      - name: Build MVP pom2.xml with maven
        working-directory: ./isolated/mvp
        run: |
          set -o pipefail
          mvn -f pom2.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee mvp-build-logs/build-mvp-pom2.log

      - name: Build MVP pom3.xml with maven
        working-directory: ./isolated/mvp
        run: |
          set -o pipefail
          mvn -f pom3.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee mvp-build-logs/build-mvp-pom3.log

      - name: Build MVP pom4.xml with maven
        working-directory: ./isolated/mvp
        run: |
          set -o pipefail
          mvn -f pom4.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee mvp-build-logs/build-mvp-pom4.log

      - name: Build MVP pom5.xml with maven
        working-directory: ./isolated/mvp
        run: |
          set -o pipefail
          mvn -f pom5.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee mvp-build-logs/build-mvp-pom5.log

      - name: Build MVP pom6.xml with maven
        working-directory: ./isolated/mvp
        run: |
          set -o pipefail
          mvn -f pom6.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee mvp-build-logs/build-mvp-pom6.log

      - name: Build MVP Javadoc with maven
        working-directory: ./isolated/mvp
        run: |
          set -o pipefail
          mvn -f pomJavaDoc.xml process-sources -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee mvp-build-logs/build-mvp-javadoc.log

      - name: Download galasactl binaries
        working-directory: ./isolated/mvp
        run: |
          mkdir bin && 
          cd bin && 
          wget https://development.galasa.dev/main/binary/cli/galasactl-darwin-x86_64 &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-darwin-arm64 &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-linux-arm64 &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-linux-x86_64 &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-linux-s390x &&
          wget https://development.galasa.dev/main/binary/cli/galasactl-windows-x86_64.exe &&
          cd ..

      - name: Build galasactl directory with maven
        working-directory: ./isolated/mvp
        run: |
          set -o pipefail
          mvn -f pomGalasactl.xml validate -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee mvp-build-logs/build-mvp-galasactl.log

      - name: Copy text files into MVP
        working-directory: ./isolated/mvp
        run : |
          cp -vr resources/* target/isolated/

      - name: Build Docker image for MVP development maven registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ github.workspace }}/isolated/dockerfiles/dockerfile.isolated
          load: true
          tags: galasa-mvp:test
          build-args: |
            directory=isolated/mvp

      - name: Build MVP zip with maven
        working-directory: ./isolated/mvp
        run: |
          set -o pipefail
          mvn -f pomZip.xml deploy -X \
          -Dgpg.skip=true \
          -Dgalasa.target.repo=file:target/isolated/maven \
          -Dgalasa.release.repo=file:${{ github.workspace }}/isolated/mvp/repo \
          -Dgalasa.runtime.repo=https://development.galasa.dev/main/maven-repo/obr \
          -Dgalasa.simplatform.repo=https://development.galasa.dev/main/maven-repo/simplatform \
          -Dgalasa.javadoc.repo=https://development.galasa.dev/main/maven-repo/javadoc \
          -Dgalasa.docs.repo=https://maven.pkg.github.com/galasa-dev-archives/galasa.dev \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          --batch-mode --errors --fail-at-end \
          --settings ${{ github.workspace }}/isolated/settings.xml 2>&1 | tee mvp-build-logs/build-mvp-zip.log

      - name: Upload MVP Maven build logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: mvp-maven-build-logs
          path: mvp-build-logs
          retention-days: 7

      - name: Download galasa-docs-site HTML from Galasa builds
        uses: actions/download-artifact@v4
        with:
          name: galasa-docs-site
          path: ${{ github.workspace }}/isolated/mvp/target/isolated/galasa-docs-site
          github-token: ${{ github.token }}
          run-id: ${{ needs.find-last-successful-build.outputs.workflow_id }}

      - name: Build Docker image for MVP zip
        uses: docker/build-push-action@v5
        with:
          context: ./isolated/mvp
          file: ${{ github.workspace }}/isolated/dockerfiles/dockerfile.isolatedzip
          load: true
          tags: galasa-mvp-zip:test
          build-args: |
            baseVersion=latest
            dockerRepository=${{ env.REGISTRY }}
      